Stavový automat Ship
-------------------

Tento automat popisuje chování lodi. V časových intervalech v rozmezí (PERIOD_TIME_MIN, PERIOD_TIME_MAX) se vždy potopí jedna z částí lodi. Je dopředu známé, že se potopí část 1, pak část 2, 3 a 4. Po potopení všech částí je potopena celá loď (stav SHIP_SUNKEN). Pořadí potápění je určené - simulujeme tím, že loď například narazila do ledovce na pravoboku vepředu, kde se vytvořila díra, tudíž pravobok se potopí jako první, potom levobok, střední část a nakonec záď.

Stavový automat hráčů
---------------------

Obecný popis hráče - detaily ke každému z hráčů jsou v dalších kapitolách. Základní odlišnost v jednotlivých hráčích je v tom, jak posílají lidi ze své pozice na jiné pozice.

Každý z hráčů prochází základní časovou smyčkou
* v čase 0 se může rozhodnout a odeslat lidi na jinou část lodi, tito lidé dorazí na místo určení v časovém rozmezí (5, 8), pokud se mezitím nepotopí tato část lodi
* od času 0 se také připravuje další záchranná loď a nastupují na ní lidé. Tato loď odplouvá někdy v časovém rozmezí (10, 20) a pak znovu začíná časová smyčka. Pokud na pozici už nejsou jiní lidé než hráč, pak zůstává loď připravena a hráč se v případě potopení části lodi může zachránit. 

Každý z hráčů může být kapitánem lodi (tato možnost se volí proměnnou isCaptain).

Žádný automat neposílá lidi na zaplavenou nebo opuštěnou pozici.

Stavový automat NondeterministicPlayer
-----------------------

Tento hráč nedeterministicky může poslat 0 až MAX_SEND_PEOPLE_AMOUNT lidí na každou z dalších pozic.
 
Stavový automat Priest
----------------------

Tento hráč pouze zachraňuje lidi, které má na své pozici. Žádné lidi nikam neposílá. 

Stavový automat HazardPlayer
----------------------------

Tento hráč má možnost poslat lidi na další následující pozici. Pokud je na jeho pozici více lidí, než MAX_SEND_PEOPLE_AMOUNT, pak může poslat právě MAX_SEND_PEOPLE_AMOUNT lidí, pokud je tam méně lidí, tak pošle všechny.

Testy
-----
A[] not deadlock
Musí být splněn.
Automaty se nikdy nedostanou do deadlocku. 

A<> ship.SHIP_SUNKEN
Musí být splněn.
Každá loď se někdy potopí.

A<> ship.SHIP_SUNKEN and (position1.FLOODED_POSITION_AND_CAPTAIN_SAVED or position1.FLOODED_POSITION_AND_PLAYER_SAVED or position1.DEAD) and (position2.FLOODED_POSITION_AND_CAPTAIN_SAVED or position2.FLOODED_POSITION_AND_PLAYER_SAVED or position2.DEAD) and (position3.FLOODED_POSITION_AND_CAPTAIN_SAVED or position3.FLOODED_POSITION_AND_PLAYER_SAVED or position3.DEAD) and (position4.FLOODED_POSITION_AND_CAPTAIN_SAVED or position4.FLOODED_POSITION_AND_PLAYER_SAVED or position4.DEAD)
Musí být splněn.
Každý z hráčů se musí utopit nebo být zachráněn (a to pokud je kapitán i pokud není). 

Dotazy typu A<> ship.SHIP_SUNKEN && peopleCountOnBoard <= (80*peopleCountAtStart)/100
Můžou i nemusí být splněny.
Tyto dotazy testují kolik lidí lze vždy zachránit se zvolenou kombinací hráčů. Příklad ukazuje, zda lze vždy zachránit 20% lidí.

Dotazy typu E<> ship.SHIP_SUNKEN && peopleCountOnBoard <= 2 * peopleCountAtStart/100
Můžou i nemusí být splněny.
Tyto dotazy testují kolik lidí lze někdy zachránit se zvolenou kombinací hráčů. Tento příklad ukazuje, zda je možné zachránit 98% lidí na lodi.
 
E<> position1.FLOODED_POSITION_AND_CAPTAIN_SAVED or position2.FLOODED_POSITION_AND_CAPTAIN_SAVED or position3.FLOODED_POSITION_AND_CAPTAIN_SAVED or position4.FLOODED_POSITION_AND_CAPTAIN_SAVED
Může i nemusí být splněn.
Ukazuje, zda lze v nějakém případě zachránit kapitána. Příklad kdy nelze - na první pozici Priest a velké množství lidí.

A<> position1.FLOODED_POSITION_AND_CAPTAIN_SAVED or position2.FLOODED_POSITION_AND_CAPTAIN_SAVED or position3.FLOODED_POSITION_AND_CAPTAIN_SAVED or position4.FLOODED_POSITION_AND_CAPTAIN_SAVED  
Může i nemusí být splněn.
Ukazuje, zda lze v každém případě zachránit kapitána.

  
